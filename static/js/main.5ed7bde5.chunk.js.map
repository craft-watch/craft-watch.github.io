{"version":3,"sources":["Menu.tsx","SortableTable.tsx","InventoryTable.tsx","App.tsx","index.tsx"],"names":["Menu","props","state","expanded","this","renderExpanded","renderCollapsed","className","onClick","setState","title","selections","formatSelections","onToggleSelection","onToggleFormatSelection","onGlobalSelection","onGlobalFormatSelection","brewerySelections","onToggleBrewerySelection","onGlobalBrewerySelection","href","React","Component","Section","_","map","selected","key","type","checked","onChange","Column","PureComponent","SortableTable","sortColIdx","sortDescending","columns","Children","toArray","children","col","idx","selector","join","handleHeaderClick","name","getSortedData","datum","render","sortedData","sortBy","data","reverse","renderBrewery","item","brewery","renderThumbnail","url","alt","src","thumbnailUrl","width","height","available","renderName","summary","keg","mixed","desc","renderTooltipText","split","para","renderAbv","abv","toFixed","renderSize","sizeMl","renderPrice","perItemPrice","InventoryTable","items","_inventory","shuffledItems","flatten","shuffle","groupBy","App","filterItems","filter","formatSelected","handleToggleBrewerySelection","handleGlobalBrewerySelection","each","b","handleToggleFormatSelection","handleGlobalFormatSelection","object","uniq","p","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ed7bde5.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"underscore\";\n\nexport type Selections = { [key: string]: boolean };\n\nexport interface MenuProps {\n  brewerySelections: Selections;\n  onToggleBrewerySelection: (key: string) => void;\n  onGlobalBrewerySelection: (selected: boolean) => void;\n  formatSelections: Selections;\n  onToggleFormatSelection: (key: string) => void;\n  onGlobalFormatSelection: (selected: boolean) => void;\n}\n\nexport interface SectionProps {\n  title: string;\n  selections: Selections;\n  onToggleSelection: (key: string) => void;\n  onGlobalSelection: (selection: boolean) => void;\n}\n  \ninterface State {\n  expanded: boolean;\n}\n  \nexport default class Menu extends React.Component<MenuProps, State> {\n  constructor(props: MenuProps) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n  }\n  \n  render(): JSX.Element {\n    return this.state.expanded ? this.renderExpanded() : this.renderCollapsed();\n  }\n\n  private renderCollapsed(): JSX.Element {\n    return (\n      <div className=\"menu-hamburger\">\n        <div className=\"menu-button\" onClick={() => this.setState({ expanded: true })}>&#9776;</div>\n      </div>\n    );\n  }\n\n  private renderExpanded(): JSX.Element {\n    return (\n      <div className=\"menu\">\n        <div className=\"menu-button\" onClick={() => this.setState({ expanded: false })}>&times;</div>\n        <div className=\"content\">\n          <Section\n            title=\"Formats\"\n            selections={this.props.formatSelections}\n            onToggleSelection={this.props.onToggleFormatSelection}\n            onGlobalSelection={this.props.onGlobalFormatSelection}\n          />\n          <Section\n            title=\"Breweries\"\n            selections={this.props.brewerySelections}\n            onToggleSelection={this.props.onToggleBrewerySelection}\n            onGlobalSelection={this.props.onGlobalBrewerySelection}\n          />\n        </div>\n        <div className=\"copyright\">© <a href=\"https://github.com/oliver-charlesworth\">Oliver Charlesworth</a> 2020</div>\n      </div>\n    );\n  }\n}\n\nconst Section: React.FC<SectionProps> = (props) => (\n  <div className=\"section\">\n    <h4>{props.title}</h4>\n    {\n      _.map(props.selections, (selected, key) => (\n        <label key={key} className=\"selectable\">\n          {key}\n          <input\n            type=\"checkbox\"\n            checked={selected}\n            onChange={() => props.onToggleSelection(key)}\n          />\n          <span className=\"checkmark\">{selected ? \"✓\" : \"\"}</span>\n        </label>\n      ))\n    }\n    <div>\n      <span className=\"all-or-none\" onClick={() => props.onGlobalSelection(true)}>All</span>\n      <span className=\"all-or-none\" onClick={() => props.onGlobalSelection(false)}>None</span>\n    </div>\n  </div>\n);\n","import React, { ReactElement } from \"react\";\nimport _ from \"underscore\";\n\nexport type Renderer<T> = (datum: T) => JSX.Element | string | null;\n\nexport interface ColumnProps<T> {\n  name?: JSX.Element | string;\n  className?: string;\n  render: Renderer<T>;\n  selector?: (datum: T) => any; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\nexport interface SortableTableProps<T> {\n  children: ReactElement<ColumnProps<T>> | Array<ReactElement<ColumnProps<T>>>;\n  data: Array<T>;\n}\n\ninterface State {\n  sortColIdx: number | null;\n  sortDescending: boolean;\n}\n\nexport class Column<T> extends React.PureComponent<ColumnProps<T>> {}\n\nexport default class SortableTable<T> extends React.Component<SortableTableProps<T>, State> {\n  constructor(props: SortableTableProps<T>) {\n    super(props);\n    this.state = {\n      sortColIdx: null,\n      sortDescending: false,\n    };\n  }\n\n  // TODO - memoize sorted data\n  // TODO - reset state if column config changes\n\n  render(): JSX.Element {\n    const columns = React.Children.toArray(this.props.children) as Array<ReactElement<ColumnProps<T>>>;\n    return (\n      <table>\n        <thead>\n          <tr>\n            {\n              columns.map((col, idx) => {\n                const className = (this.state.sortColIdx !== idx) ? \"sort-none\"\n                  : this.state.sortDescending ? \"sort-desc\" : \"sort-asc\";\n\n                return (col.props.selector)\n                  ? (\n                    <th\n                      key={idx}\n                      className={[className, col.props.className].join(\" \")}\n                      onClick={() => this.handleHeaderClick(idx)}\n                    >\n                      {col.props.name}\n                    </th>\n                  )\n                  : <th key={idx} className={col.props.className}>{col.props.name}</th>;\n              })\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.getSortedData(columns).map((datum, idx) => (\n              <tr key={idx}>\n                {\n                  columns.map((col, idx) => (\n                    <td key={idx} className={col.props.className}>{col.props.render(datum)}</td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  private handleHeaderClick(idx: number): void {\n    this.setState(state => ({\n      sortColIdx: idx,\n      sortDescending: (state.sortColIdx === idx) ? !state.sortDescending : false,\n    }));\n  }\n\n  private getSortedData(columns: Array<ReactElement<ColumnProps<T>>>): Array<T> {\n    const selector = (this.state.sortColIdx === null) ? null : columns[this.state.sortColIdx].props.selector;\n    const sortedData = selector ? _.sortBy(this.props.data, selector) : this.props.data;\n    return this.state.sortDescending ? sortedData.reverse() : sortedData;\n  }\n}","import _ from \"underscore\";\nimport SortableTable, { Column, Renderer } from \"./SortableTable\";\nimport React from \"react\";\nimport { Item } from \"./model\";\n\nexport interface InventoryTableProps {\n  items: Array<Item>;\n}\n\nconst InventoryTable: React.FC<InventoryTableProps> = (props) => (\n  <SortableTable data={props.items}>\n    <Column\n      name=\"Brewery\"\n      render={renderBrewery}\n      selector={(item) => item.brewery}\n    />\n    <Column\n      className=\"thumbnail\"\n      render={renderThumbnail}\n    />\n    <Column\n      name=\"Name\"\n      className=\"name\"\n      render={renderName}\n      selector={(item) => item.name}\n    />\n    <Column\n      name=\"ABV\"\n      className=\"hide-on-mobile\"\n      render={renderAbv}\n      selector={(item) => item.abv}\n    />\n    <Column\n      name=\"Size\"\n      className=\"size hide-on-mobile\"\n      render={renderSize}\n      selector={(item) => item.sizeMl}\n    />\n    <Column\n      name={<>Price <span className=\"hide-on-mobile\">per item</span></>}\n      render={renderPrice}\n      selector={(item) => item.perItemPrice}\n    />\n  </SortableTable>\n);\n\nconst renderBrewery: Renderer<Item> = item => item.brewery;\n\nconst renderThumbnail: Renderer<Item> = item => (\n  <a href={item.url}>\n    <img alt=\"\" src={item.thumbnailUrl} width=\"100px\" height=\"100px\" />\n    {item.available || <div className=\"sold-out\">Out of stock</div>}\n  </a>\n);\n\nconst renderName: Renderer<Item> = item => (\n  <div className=\"tooltip\">\n    <a href={item.url}>{item.name}</a>\n    <p className=\"summary\">\n      {item.summary && item.summary}\n    </p>\n    <p className=\"summary\">\n      {item.keg && <span className=\"pill violet\">Minikeg</span>}\n      {item.mixed && <span className=\"pill magenta\">Mixed case</span>}\n    </p>\n    {item.desc && renderTooltipText(item)}\n  </div>\n);\n\n// TODO - collapse successive newlines\nconst renderTooltipText = (item: Item): JSX.Element => (\n  <span className=\"tooltip-text\">\n    {item.desc && _.map(item.desc.split(\"\\n\"), (para, idx) => <p key={idx}>{para}</p>)}\n    <div className=\"disclaimer\">© {item.brewery}</div>\n  </span>\n);\n\nconst renderAbv: Renderer<Item> = item => item.abv ? `${item.abv.toFixed(1)}%` : \"?\";\n\nconst renderSize: Renderer<Item> = item => !item.sizeMl ? \"?\"\n  : (item.sizeMl < 1000) ? `${item.sizeMl} ml`\n  : `${item.sizeMl / 1000} litres`;\n\nconst renderPrice: Renderer<Item> = item => `£${item.perItemPrice.toFixed(2)}`;\n\nexport default InventoryTable;","import React from \"react\";\nimport _ from \"underscore\";\nimport _inventory from \"./inventory.json\";\nimport { Inventory, Item } from \"./model\";\nimport Menu, { Selections } from \"./Menu\";\nimport InventoryTable from \"./InventoryTable\";\nimport \"./index.css\";\n\nconst items = (_inventory as Inventory).items;\nconst shuffledItems = _.flatten(_.shuffle(_.groupBy(items, item => item.brewery)));\n\ninterface AppState {\n  brewerySelections: Selections; \n  formatSelections: Selections;\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      brewerySelections: _.object(_.uniq(_.map(items, item => [item.brewery, true]), true, p => p[0])),\n      formatSelections: {\n        \"Regular\": true,\n        \"Mixed case\": true,\n        \"Minikeg\": true,\n      },\n    };\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <Menu\n          brewerySelections={this.state.brewerySelections}\n          onToggleBrewerySelection={(key) => this.handleToggleBrewerySelection(key)}\n          onGlobalBrewerySelection={(selected) => this.handleGlobalBrewerySelection(selected)}\n          formatSelections={this.state.formatSelections}\n          onToggleFormatSelection={(key) => this.handleToggleFormatSelection(key)}\n          onGlobalFormatSelection={(selected) => this.handleGlobalFormatSelection(selected)}\n        />\n\n        <InventoryTable items={this.filterItems()} />\n      </div>\n    );\n  }\n\n  private filterItems = (): Array<Item> => shuffledItems.filter(item =>\n    this.state.brewerySelections[item.brewery] && this.formatSelected(item)\n  );\n\n  private formatSelected = (item: Item): boolean =>\n    (this.state.formatSelections[\"Regular\"] && !item.keg && !item.mixed) ||\n    (this.state.formatSelections[\"Mixed case\"] && item.mixed) ||\n    (this.state.formatSelections[\"Minikeg\"] && item.keg);\n\n  private handleToggleBrewerySelection = (key: string): void => {\n    this.setState(state => {\n      const brewerySelections = { ...state.brewerySelections };\n      brewerySelections[key] = !brewerySelections[key];\n      return { brewerySelections };\n    })\n  }\n\n  private handleGlobalBrewerySelection = (selected: boolean): void => {\n    this.setState(state => {\n      const brewerySelections = { ...state.brewerySelections };\n      _.each(brewerySelections, (_, b) => brewerySelections[b] = selected);\n      return { brewerySelections };\n    });\n  }\n\n  private handleToggleFormatSelection = (key: string): void => {\n    this.setState(state => {\n      const formatSelections = { ...state.formatSelections };\n      formatSelections[key] = !formatSelections[key];\n      return { formatSelections };\n    });\n  }\n\n  private handleGlobalFormatSelection = (selected: boolean): void => {\n    this.setState(state => {\n      const formatSelections = { ...state.formatSelections };\n      _.each(formatSelections, (_, b) => formatSelections[b] = selected);\n      return { formatSelections };\n    });\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}