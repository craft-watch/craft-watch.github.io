{"version":3,"sources":["Menu.tsx","SortableTable.tsx","InventoryTable.tsx","App.tsx","index.tsx"],"names":["Menu","props","state","expanded","id","this","renderExpanded","renderCollapsed","className","onClick","setState","Object","entries","breweryVisibility","map","brewery","visible","key","type","checked","onToggleVisibility","onGlobalVisibility","React","Component","Column","PureComponent","SortableTable","sortColIdx","sortDescending","columns","Children","toArray","children","col","idx","selector","join","handleHeaderClick","name","getSortedData","datum","render","sortedData","data","concat","sort","a","b","compareNullable","reverse","renderBrewery","item","renderThumbnail","href","url","alt","src","thumbnailUrl","width","height","available","renderName","summary","renderAbv","abv","toFixed","renderSize","sizeMl","renderPrice","perItemPrice","InventoryTable","items","inventory","_inventory","App","Set","forEach","handleToggleVisibility","handleGlobalVisibility","filter","keys","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76869b72.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface MenuProps {\n  breweryVisibility: { [key: string]: boolean; };\n  onToggleVisibility: (brewery: string) => void;\n  onGlobalVisibility: (visible: boolean) => void;\n}\n  \ninterface State {\n  expanded: boolean;\n}\n  \nexport default class Menu extends React.Component<MenuProps, State> {\n  constructor(props: MenuProps) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n  }\n  \n  render() {\n    return (\n      <div id=\"menu\">\n        {this.state.expanded ? this.renderExpanded() : this.renderCollapsed()}\n      </div>\n    );\n  }\n\n  private renderCollapsed() {\n    return (\n      <div className=\"collapsed\">\n        <div className=\"button\" onClick={() => this.setState({ expanded: true })}>&#9776;</div>\n      </div>\n    );\n  }\n\n  private renderExpanded() {\n    return (\n      <div className=\"expanded\">\n        <div className=\"button\" onClick={() => this.setState({ expanded: false })}>&times;</div>\n        <h4>Select breweries</h4>\n        {\n          Object.entries(this.props.breweryVisibility).map(([brewery, visible]) => (\n            <label key={brewery} className=\"selectable\">\n              {brewery}\n              <input\n                type=\"checkbox\"\n                checked={visible}\n                onClick={() => this.props.onToggleVisibility(brewery)}\n              />\n              <span className=\"checkmark\"></span>\n            </label>\n          ))\n        }\n        <div>\n          <span className=\"allOrNone\" onClick={() => this.props.onGlobalVisibility(true)}>All</span>\n          <span className=\"allOrNone\" onClick={() => this.props.onGlobalVisibility(false)}>None</span>\n        </div>\n      </div>\n    );\n  }\n}","import React, { ReactElement } from \"react\";\n\nexport interface ColumnProps<T> {\n  name?: string;\n  className?: string;\n  render: (datum: T) => ReactElement | string | null;\n  selector?: (datum: T) => any;\n}\n\nexport interface SortableTableProps<T> {\n  children: ReactElement<ColumnProps<T>> | Array<ReactElement<ColumnProps<T>>>;\n  data: Array<T>;\n}\n\ninterface State {\n  sortColIdx: number | null;\n  sortDescending: boolean;\n}\n\nexport class Column<T> extends React.PureComponent<ColumnProps<T>> {};\n\nexport default class SortableTable<T> extends React.Component<SortableTableProps<T>, State> {\n  constructor(props: SortableTableProps<T>) {\n    super(props);\n    this.state = {\n      sortColIdx: null,\n      sortDescending: false,\n    };\n  }\n\n  // TODO - memoize sorted data\n  // TODO - reset state if column config changes\n\n  render() {\n    const columns = React.Children.toArray(this.props.children) as Array<ReactElement<ColumnProps<T>>>;\n    return (\n      <table>\n        <thead>\n          <tr>\n            {\n              columns.map((col, idx) => {\n                const className = (this.state.sortColIdx !== idx) ? \"sort-none\"\n                  : this.state.sortDescending ? \"sort-desc\" : \"sort-asc\";\n\n                return (col.props.selector)\n                  ? (\n                    <th\n                      key={idx}\n                      className={[className, col.props.className].join(\" \")}\n                      onClick={() => this.handleHeaderClick(idx)}\n                    >\n                      {col.props.name}\n                    </th>\n                  )\n                  : <th key={idx} className={col.props.className}>{col.props.name}</th>;\n              })\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.getSortedData(columns).map((datum, idx) => (\n              <tr key={idx}>\n                {\n                  columns.map((col, idx) => (\n                    <td key={idx} className={col.props.className}>{col.props.render(datum)}</td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  private handleHeaderClick(idx: number) {\n    this.setState(state => ({\n      sortColIdx: idx,\n      sortDescending: (state.sortColIdx === idx) ? !state.sortDescending : false,\n    }));\n  }\n\n  private getSortedData(columns: Array<ReactElement<ColumnProps<T>>>): Array<T> {\n    const selector = columns[this.state.sortColIdx || 0].props.selector;\n    const sortedData = selector\n      ? this.props.data.concat().sort((a, b) => compareNullable(selector(a), selector(b)))\n      : this.props.data;\n    if (this.state.sortDescending) {\n      sortedData.reverse();\n    }\n    return sortedData;\n  }\n}\n\nconst compareNullable = (a?: any, b?: any) => (a === null) ? 1 : (b === null) ? -1 : (a! > b!) ? 1 : -1;","import SortableTable, { Column } from \"./SortableTable\";\nimport React from \"react\";\nimport { Item } from \"./model\";\n\nexport interface InventoryTableProps {\n  items: Array<Item>;\n}\n\nconst InventoryTable = (props: InventoryTableProps) => (\n  <SortableTable data={props.items}>\n    <Column\n      name=\"Brewery\"\n      render={renderBrewery}\n      selector={(item) => item.brewery}\n    />\n    <Column\n      className=\"thumbnail\"\n      render={renderThumbnail}\n    />\n    <Column\n      name=\"Name\"\n      className=\"name\"\n      render={renderName}\n      selector={(item) => item.name}\n    />\n    <Column\n      name=\"ABV\"\n      render={renderAbv}\n      selector={(item) => item.abv}\n    />\n    <Column\n      name=\"Size\"\n      className=\"size\"\n      render={renderSize}\n      selector={(item) => item.sizeMl}\n    />\n    <Column\n      name=\"Price per item\"\n      render={renderPrice}\n      selector={(item) => item.perItemPrice}\n    />\n  </SortableTable>\n);\n\nconst renderBrewery = (item: Item) => item.brewery;\n\nconst renderThumbnail = (item: Item) => (\n  <a href={item.url}>\n    <img alt=\"\" src={item.thumbnailUrl} width=\"100px\" height=\"100px\" />\n    {item.available || <div className=\"sold-out\">Sold out</div>}\n  </a>\n);\n\nconst renderName = (item: Item) => (\n  <>\n    <a href={item.url}>{item.name}</a>\n    {item.summary && <p className=\"summary\">{item.summary}</p>}\n  </>\n);\n\nconst renderAbv = (item: Item) => item.abv ? `${item.abv.toFixed(1)}%` : \"?\";\n\nconst renderSize = (item: Item) => !item.sizeMl ? \"?\"\n  : (item.sizeMl < 1000) ? `${item.sizeMl} ml`\n  : `${item.sizeMl / 1000} litres`;\n\nconst renderPrice = (item: Item) => `£${item.perItemPrice.toFixed(2)}`;\n\nexport default InventoryTable;","import React from \"react\";\nimport _inventory from \"./inventory.json\";\nimport { Inventory } from \"./model\";\nimport Menu from \"./Menu\";\nimport InventoryTable from \"./InventoryTable\";\nimport \"./index.css\";\n\nconst inventory = _inventory as Inventory;\n\ninterface AppState {\n  breweryVisibility: { [key: string]: boolean; }; \n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    \n    const breweryVisibility: { [key:string]:boolean; } = {};\n    new Set(inventory.items.map(item => item.brewery))\n      .forEach(b => breweryVisibility[b] = true);\n\n    this.state = {\n      breweryVisibility: breweryVisibility,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu\n          breweryVisibility={this.state.breweryVisibility}\n          onToggleVisibility={(brewery) => this.handleToggleVisibility(brewery)}\n          onGlobalVisibility={(visible) => this.handleGlobalVisibility(visible)}\n        />\n\n        <InventoryTable\n          items={inventory.items.filter(item => this.state.breweryVisibility[item.brewery])}\n        />\n      </div>\n    );\n  }\n\n  private handleToggleVisibility(brewery: string) {\n    this.setState(state => {\n      const breweryVisibility = { ...state.breweryVisibility };\n      breweryVisibility[brewery] = !breweryVisibility[brewery];\n      return { breweryVisibility };\n    });\n  }\n\n  private handleGlobalVisibility(visible: boolean) {\n    this.setState(state => {\n      const breweryVisibility = { ...state.breweryVisibility };\n      Object.keys(breweryVisibility).forEach(b => breweryVisibility[b] = visible);\n      return { breweryVisibility };\n    });\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}