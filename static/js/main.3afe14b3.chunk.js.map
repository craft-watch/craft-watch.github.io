{"version":3,"sources":["Menu.tsx","SortableTable.tsx","InventoryTable.tsx","App.tsx","index.tsx"],"names":["Menu","props","state","expanded","id","this","renderExpanded","renderCollapsed","className","onClick","setState","_","map","breweryVisibility","visible","brewery","key","type","checked","onToggleVisibility","onGlobalVisibility","React","Component","Column","PureComponent","SortableTable","sortColIdx","sortDescending","columns","Children","toArray","children","col","idx","selector","join","handleHeaderClick","name","getSortedData","datum","render","sortedData","sortBy","data","reverse","renderBrewery","item","renderThumbnail","href","url","alt","src","thumbnailUrl","width","height","available","renderName","summary","renderAbv","abv","toFixed","renderSize","sizeMl","renderPrice","perItemPrice","InventoryTable","items","_inventory","shuffledItems","flatten","shuffle","groupBy","App","object","uniq","p","handleToggleVisibility","handleGlobalVisibility","filter","each","b","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3afe14b3.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"underscore\";\n\nexport interface MenuProps {\n  breweryVisibility: { [key: string]: boolean };\n  onToggleVisibility: (brewery: string) => void;\n  onGlobalVisibility: (visible: boolean) => void;\n}\n  \ninterface State {\n  expanded: boolean;\n}\n  \nexport default class Menu extends React.Component<MenuProps, State> {\n  constructor(props: MenuProps) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n  }\n  \n  render(): JSX.Element {\n    return (\n      <div id=\"menu\">\n        {this.state.expanded ? this.renderExpanded() : this.renderCollapsed()}\n      </div>\n    );\n  }\n\n  private renderCollapsed(): JSX.Element {\n    return (\n      <div className=\"collapsed\">\n        <div className=\"button\" onClick={() => this.setState({ expanded: true })}>&#9776;</div>\n      </div>\n    );\n  }\n\n  private renderExpanded(): JSX.Element {\n    return (\n      <div className=\"expanded\">\n        <div className=\"button\" onClick={() => this.setState({ expanded: false })}>&times;</div>\n        <h4>Select breweries</h4>\n        {\n          _.map(this.props.breweryVisibility, (visible, brewery) => (\n            <label key={brewery} className=\"selectable\">\n              {brewery}\n              <input\n                type=\"checkbox\"\n                checked={visible}\n                onClick={() => this.props.onToggleVisibility(brewery)}\n              />\n              <span className=\"checkmark\">{visible ? \"âœ“\" : \"\"}</span>\n            </label>\n          ))\n        }\n        <div>\n          <span className=\"allOrNone\" onClick={() => this.props.onGlobalVisibility(true)}>All</span>\n          <span className=\"allOrNone\" onClick={() => this.props.onGlobalVisibility(false)}>None</span>\n        </div>\n      </div>\n    );\n  }\n}","import React, { ReactElement } from \"react\";\nimport _ from \"underscore\";\n\nexport type Renderer<T> = (datum: T) => JSX.Element | string | null;\n\nexport interface ColumnProps<T> {\n  name?: string;\n  className?: string;\n  render: Renderer<T>;\n  selector?: (datum: T) => any; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\nexport interface SortableTableProps<T> {\n  children: ReactElement<ColumnProps<T>> | Array<ReactElement<ColumnProps<T>>>;\n  data: Array<T>;\n}\n\ninterface State {\n  sortColIdx: number | null;\n  sortDescending: boolean;\n}\n\nexport class Column<T> extends React.PureComponent<ColumnProps<T>> {}\n\nexport default class SortableTable<T> extends React.Component<SortableTableProps<T>, State> {\n  constructor(props: SortableTableProps<T>) {\n    super(props);\n    this.state = {\n      sortColIdx: null,\n      sortDescending: false,\n    };\n  }\n\n  // TODO - memoize sorted data\n  // TODO - reset state if column config changes\n\n  render(): JSX.Element {\n    const columns = React.Children.toArray(this.props.children) as Array<ReactElement<ColumnProps<T>>>;\n    return (\n      <table>\n        <thead>\n          <tr>\n            {\n              columns.map((col, idx) => {\n                const className = (this.state.sortColIdx !== idx) ? \"sort-none\"\n                  : this.state.sortDescending ? \"sort-desc\" : \"sort-asc\";\n\n                return (col.props.selector)\n                  ? (\n                    <th\n                      key={idx}\n                      className={[className, col.props.className].join(\" \")}\n                      onClick={() => this.handleHeaderClick(idx)}\n                    >\n                      {col.props.name}\n                    </th>\n                  )\n                  : <th key={idx} className={col.props.className}>{col.props.name}</th>;\n              })\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.getSortedData(columns).map((datum, idx) => (\n              <tr key={idx}>\n                {\n                  columns.map((col, idx) => (\n                    <td key={idx} className={col.props.className}>{col.props.render(datum)}</td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  private handleHeaderClick(idx: number): void {\n    this.setState(state => ({\n      sortColIdx: idx,\n      sortDescending: (state.sortColIdx === idx) ? !state.sortDescending : false,\n    }));\n  }\n\n  private getSortedData(columns: Array<ReactElement<ColumnProps<T>>>): Array<T> {\n    const selector = (this.state.sortColIdx === null) ? null : columns[this.state.sortColIdx].props.selector;\n    const sortedData = selector ? _.sortBy(this.props.data, selector) : this.props.data;\n    return this.state.sortDescending ? sortedData.reverse() : sortedData;\n  }\n}","import SortableTable, { Column, Renderer } from \"./SortableTable\";\nimport React from \"react\";\nimport { Item } from \"./model\";\n\nexport interface InventoryTableProps {\n  items: Array<Item>;\n}\n\nconst InventoryTable: React.FC<InventoryTableProps> = (props) => (\n  <SortableTable data={props.items}>\n    <Column\n      name=\"Brewery\"\n      render={renderBrewery}\n      selector={(item) => item.brewery}\n    />\n    <Column\n      className=\"thumbnail\"\n      render={renderThumbnail}\n    />\n    <Column\n      name=\"Name\"\n      className=\"name\"\n      render={renderName}\n      selector={(item) => item.name}\n    />\n    <Column\n      name=\"ABV\"\n      render={renderAbv}\n      selector={(item) => item.abv}\n    />\n    <Column\n      name=\"Size\"\n      className=\"size\"\n      render={renderSize}\n      selector={(item) => item.sizeMl}\n    />\n    <Column\n      name=\"Price per item\"\n      render={renderPrice}\n      selector={(item) => item.perItemPrice}\n    />\n  </SortableTable>\n);\n\nconst renderBrewery: Renderer<Item> = item => item.brewery;\n\nconst renderThumbnail: Renderer<Item> = item => (\n  <a href={item.url}>\n    <img alt=\"\" src={item.thumbnailUrl} width=\"100px\" height=\"100px\" />\n    {item.available || <div className=\"sold-out\">Sold out</div>}\n  </a>\n);\n\nconst renderName: Renderer<Item> = item => (\n  <>\n    <a href={item.url}>{item.name}</a>\n    {item.summary && <p className=\"summary\">{item.summary}</p>}\n  </>\n);\n\nconst renderAbv: Renderer<Item> = item => item.abv ? `${item.abv.toFixed(1)}%` : \"?\";\n\nconst renderSize: Renderer<Item> = item => !item.sizeMl ? \"?\"\n  : (item.sizeMl < 1000) ? `${item.sizeMl} ml`\n  : `${item.sizeMl / 1000} litres`;\n\nconst renderPrice: Renderer<Item> = item => `Â£${item.perItemPrice.toFixed(2)}`;\n\nexport default InventoryTable;","import React from \"react\";\nimport _ from \"underscore\";\nimport _inventory from \"./inventory.json\";\nimport { Inventory } from \"./model\";\nimport Menu from \"./Menu\";\nimport InventoryTable from \"./InventoryTable\";\nimport \"./index.css\";\n\nconst items = (_inventory as Inventory).items;\nconst shuffledItems = _.flatten(_.shuffle(_.groupBy(items, item => item.brewery)));\n\ninterface AppState {\n  breweryVisibility: { [key: string]: boolean }; \n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      breweryVisibility: _.object(_.uniq(_.map(items, item => [item.brewery, true]), true, p => p[0])),\n    };\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <Menu\n          breweryVisibility={this.state.breweryVisibility}\n          onToggleVisibility={(brewery) => this.handleToggleVisibility(brewery)}\n          onGlobalVisibility={(visible) => this.handleGlobalVisibility(visible)}\n        />\n\n        <InventoryTable\n          items={shuffledItems.filter(item => this.state.breweryVisibility[item.brewery])}\n        />\n      </div>\n    );\n  }\n\n  private handleToggleVisibility(brewery: string): void {\n    this.setState(state => {\n      const breweryVisibility = { ...state.breweryVisibility };\n      breweryVisibility[brewery] = !breweryVisibility[brewery];\n      return { breweryVisibility };\n    });\n  }\n\n  private handleGlobalVisibility(visible: boolean): void {\n    this.setState(state => {\n      const breweryVisibility = { ...state.breweryVisibility };\n      _.each(breweryVisibility, (_, b) => breweryVisibility[b] = visible);\n      return { breweryVisibility };\n    });\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}