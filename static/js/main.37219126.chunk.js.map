{"version":3,"sources":["Menu.tsx","SortableTable.tsx","InventoryTable.tsx","App.tsx","index.tsx"],"names":["Menu","props","state","expanded","id","this","renderExpanded","renderCollapsed","className","onClick","setState","title","selections","formatSelections","onToggleSelection","onToggleFormatSelection","onGlobalSelection","onGlobalFormatSelection","brewerySelections","onToggleBrewerySelection","onGlobalBrewerySelection","React","Component","Section","_","map","selected","key","type","checked","Column","PureComponent","SortableTable","sortColIdx","sortDescending","columns","Children","toArray","children","col","idx","selector","join","handleHeaderClick","name","getSortedData","datum","render","sortedData","sortBy","data","reverse","renderBrewery","item","brewery","renderThumbnail","href","url","alt","src","thumbnailUrl","width","height","available","renderName","summary","keg","mixed","renderAbv","abv","toFixed","renderSize","sizeMl","renderPrice","perItemPrice","InventoryTable","items","_inventory","shuffledItems","flatten","shuffle","groupBy","App","filterItems","filter","formatSelected","handleToggleBrewerySelection","handleGlobalBrewerySelection","each","b","handleToggleFormatSelection","handleGlobalFormatSelection","object","uniq","p","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37219126.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"underscore\";\n\nexport type Selections = { [key: string]: boolean };\n\nexport interface MenuProps {\n  brewerySelections: Selections;\n  onToggleBrewerySelection: (key: string) => void;\n  onGlobalBrewerySelection: (selected: boolean) => void;\n  formatSelections: Selections;\n  onToggleFormatSelection: (key: string) => void;\n  onGlobalFormatSelection: (selected: boolean) => void;\n}\n\nexport interface SectionProps {\n  title: string;\n  selections: Selections;\n  onToggleSelection: (key: string) => void;\n  onGlobalSelection: (selection: boolean) => void;\n}\n  \ninterface State {\n  expanded: boolean;\n}\n  \nexport default class Menu extends React.Component<MenuProps, State> {\n  constructor(props: MenuProps) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n  }\n  \n  render(): JSX.Element {\n    return (\n      <div id=\"menu\">\n        {this.state.expanded ? this.renderExpanded() : this.renderCollapsed()}\n      </div>\n    );\n  }\n\n  private renderCollapsed(): JSX.Element {\n    return (\n      <div className=\"collapsed\">\n        <div className=\"button\" onClick={() => this.setState({ expanded: true })}>&#9776;</div>\n      </div>\n    );\n  }\n\n  private renderExpanded(): JSX.Element {\n    return (\n      <div className=\"expanded\">\n        <div className=\"button\" onClick={() => this.setState({ expanded: false })}>&times;</div>\n        <Section\n          title=\"Formats\"\n          selections={this.props.formatSelections}\n          onToggleSelection={this.props.onToggleFormatSelection}\n          onGlobalSelection={this.props.onGlobalFormatSelection}\n        />\n        <Section\n          title=\"Breweries\"\n          selections={this.props.brewerySelections}\n          onToggleSelection={this.props.onToggleBrewerySelection}\n          onGlobalSelection={this.props.onGlobalBrewerySelection}\n        />\n      </div>\n    );\n  }\n}\n\nconst Section: React.FC<SectionProps> = (props) => (\n  <div className=\"section\">\n    <h4>{props.title}</h4>\n    {\n      _.map(props.selections, (selected, key) => (\n        <label key={key} className=\"selectable\">\n          {key}\n          <input\n            type=\"checkbox\"\n            checked={selected}\n            onClick={() => props.onToggleSelection(key)}\n          />\n          <span className=\"checkmark\">{selected ? \"âœ“\" : \"\"}</span>\n        </label>\n      ))\n    }\n    <div>\n      <span className=\"allOrNone\" onClick={() => props.onGlobalSelection(true)}>All</span>\n      <span className=\"allOrNone\" onClick={() => props.onGlobalSelection(false)}>None</span>\n    </div>\n  </div>\n);\n","import React, { ReactElement } from \"react\";\nimport _ from \"underscore\";\n\nexport type Renderer<T> = (datum: T) => JSX.Element | string | null;\n\nexport interface ColumnProps<T> {\n  name?: string;\n  className?: string;\n  render: Renderer<T>;\n  selector?: (datum: T) => any; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\n\nexport interface SortableTableProps<T> {\n  children: ReactElement<ColumnProps<T>> | Array<ReactElement<ColumnProps<T>>>;\n  data: Array<T>;\n}\n\ninterface State {\n  sortColIdx: number | null;\n  sortDescending: boolean;\n}\n\nexport class Column<T> extends React.PureComponent<ColumnProps<T>> {}\n\nexport default class SortableTable<T> extends React.Component<SortableTableProps<T>, State> {\n  constructor(props: SortableTableProps<T>) {\n    super(props);\n    this.state = {\n      sortColIdx: null,\n      sortDescending: false,\n    };\n  }\n\n  // TODO - memoize sorted data\n  // TODO - reset state if column config changes\n\n  render(): JSX.Element {\n    const columns = React.Children.toArray(this.props.children) as Array<ReactElement<ColumnProps<T>>>;\n    return (\n      <table>\n        <thead>\n          <tr>\n            {\n              columns.map((col, idx) => {\n                const className = (this.state.sortColIdx !== idx) ? \"sort-none\"\n                  : this.state.sortDescending ? \"sort-desc\" : \"sort-asc\";\n\n                return (col.props.selector)\n                  ? (\n                    <th\n                      key={idx}\n                      className={[className, col.props.className].join(\" \")}\n                      onClick={() => this.handleHeaderClick(idx)}\n                    >\n                      {col.props.name}\n                    </th>\n                  )\n                  : <th key={idx} className={col.props.className}>{col.props.name}</th>;\n              })\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.getSortedData(columns).map((datum, idx) => (\n              <tr key={idx}>\n                {\n                  columns.map((col, idx) => (\n                    <td key={idx} className={col.props.className}>{col.props.render(datum)}</td>\n                  ))\n                }\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  private handleHeaderClick(idx: number): void {\n    this.setState(state => ({\n      sortColIdx: idx,\n      sortDescending: (state.sortColIdx === idx) ? !state.sortDescending : false,\n    }));\n  }\n\n  private getSortedData(columns: Array<ReactElement<ColumnProps<T>>>): Array<T> {\n    const selector = (this.state.sortColIdx === null) ? null : columns[this.state.sortColIdx].props.selector;\n    const sortedData = selector ? _.sortBy(this.props.data, selector) : this.props.data;\n    return this.state.sortDescending ? sortedData.reverse() : sortedData;\n  }\n}","import SortableTable, { Column, Renderer } from \"./SortableTable\";\nimport React from \"react\";\nimport { Item } from \"./model\";\n\nexport interface InventoryTableProps {\n  items: Array<Item>;\n}\n\nconst InventoryTable: React.FC<InventoryTableProps> = (props) => (\n  <SortableTable data={props.items}>\n    <Column\n      name=\"Brewery\"\n      render={renderBrewery}\n      selector={(item) => item.brewery}\n    />\n    <Column\n      className=\"thumbnail\"\n      render={renderThumbnail}\n    />\n    <Column\n      name=\"Name\"\n      className=\"name\"\n      render={renderName}\n      selector={(item) => item.name}\n    />\n    <Column\n      name=\"ABV\"\n      render={renderAbv}\n      selector={(item) => item.abv}\n    />\n    <Column\n      name=\"Size\"\n      className=\"size\"\n      render={renderSize}\n      selector={(item) => item.sizeMl}\n    />\n    <Column\n      name=\"Price per item\"\n      render={renderPrice}\n      selector={(item) => item.perItemPrice}\n    />\n  </SortableTable>\n);\n\nconst renderBrewery: Renderer<Item> = item => item.brewery;\n\nconst renderThumbnail: Renderer<Item> = item => (\n  <a href={item.url}>\n    <img alt=\"\" src={item.thumbnailUrl} width=\"100px\" height=\"100px\" />\n    {item.available || <div className=\"sold-out\">Out of stock</div>}\n  </a>\n);\n\nconst renderName: Renderer<Item> = item => (\n  <>\n    <a href={item.url}>{item.name}</a>\n    <p className=\"summary\">\n      {item.summary && item.summary}\n    </p>\n    <p className=\"summary\">\n      {item.keg && <span className=\"pill violet\">Minikeg</span>}\n      {item.mixed && <span className=\"pill magenta\">Mixed case</span>}\n    </p>\n  </>\n);\n\nconst renderAbv: Renderer<Item> = item => item.abv ? `${item.abv.toFixed(1)}%` : \"?\";\n\nconst renderSize: Renderer<Item> = item => !item.sizeMl ? \"?\"\n  : (item.sizeMl < 1000) ? `${item.sizeMl} ml`\n  : `${item.sizeMl / 1000} litres`;\n\nconst renderPrice: Renderer<Item> = item => `Â£${item.perItemPrice.toFixed(2)}`;\n\nexport default InventoryTable;","import React from \"react\";\nimport _ from \"underscore\";\nimport _inventory from \"./inventory.json\";\nimport { Inventory, Item } from \"./model\";\nimport Menu, { Selections } from \"./Menu\";\nimport InventoryTable from \"./InventoryTable\";\nimport \"./index.css\";\n\nconst items = (_inventory as Inventory).items;\nconst shuffledItems = _.flatten(_.shuffle(_.groupBy(items, item => item.brewery)));\n\ninterface AppState {\n  brewerySelections: Selections; \n  formatSelections: Selections;\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      brewerySelections: _.object(_.uniq(_.map(items, item => [item.brewery, true]), true, p => p[0])),\n      formatSelections: {\n        \"Regular\": true,\n        \"Mixed case\": true,\n        \"Minikeg\": true,\n      },\n    };\n  }\n\n  render(): JSX.Element {\n    return (\n      <div>\n        <Menu\n          brewerySelections={this.state.brewerySelections}\n          onToggleBrewerySelection={(key) => this.handleToggleBrewerySelection(key)}\n          onGlobalBrewerySelection={(selected) => this.handleGlobalBrewerySelection(selected)}\n          formatSelections={this.state.formatSelections}\n          onToggleFormatSelection={(key) => this.handleToggleFormatSelection(key)}\n          onGlobalFormatSelection={(selected) => this.handleGlobalFormatSelection(selected)}\n        />\n\n        <InventoryTable items={this.filterItems()} />\n      </div>\n    );\n  }\n\n  private filterItems = (): Array<Item> => shuffledItems.filter(item =>\n    this.state.brewerySelections[item.brewery] && this.formatSelected(item)\n  );\n\n  private formatSelected = (item: Item): boolean =>\n    (this.state.formatSelections[\"Regular\"] && !item.keg && !item.mixed) ||\n    (this.state.formatSelections[\"Mixed case\"] && item.mixed) ||\n    (this.state.formatSelections[\"Minikeg\"] && item.keg);\n\n  private handleToggleBrewerySelection = (key: string): void => {\n    this.setState(state => {\n      const brewerySelections = { ...state.brewerySelections };\n      brewerySelections[key] = !brewerySelections[key];\n      return { brewerySelections };\n    })\n  }\n\n  private handleGlobalBrewerySelection = (selected: boolean): void => {\n    this.setState(state => {\n      const brewerySelections = { ...state.brewerySelections };\n      _.each(brewerySelections, (_, b) => brewerySelections[b] = selected);\n      return { brewerySelections };\n    });\n  }\n\n  private handleToggleFormatSelection = (key: string): void => {\n    this.setState(state => {\n      const formatSelections = { ...state.formatSelections };\n      formatSelections[key] = !formatSelections[key];\n      return { formatSelections };\n    });\n  }\n\n  private handleGlobalFormatSelection = (selected: boolean): void => {\n    this.setState(state => {\n      const formatSelections = { ...state.formatSelections };\n      _.each(formatSelections, (_, b) => formatSelections[b] = selected);\n      return { formatSelections };\n    });\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}